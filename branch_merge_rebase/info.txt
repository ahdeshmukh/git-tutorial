Difference between branch and tag
Branches follow the commits and move along
Tags always stay on the same commit

git log --graph --oneline shows graph of the commits
git log --graph --oneline --all shows graph with all branches rather just the current one
git log --graph --oneline --all --decorate gives extra information by applying labels to the commits such as HEAD, tag, master etc..

Creating alias
git config --global alias.name "commands"
eg: git config --global alias.lga "log --graph --oneline --all --decorate"
after doing this, instead of issuing git log --graph --oneline --all --decorate, I can do git lga

Adding a branch
git branch branch_name

Getting to the branch
git checkout branch_name

Adding a branch and getting to it in one command
git checkout -b branchname

Git rename branch
git branch -m branchname new_branchname ( m => move )

Getting a deleted branch
Do git reflog
You will see the commit of the deleted branch before it was merged with master. Get the SHA number of the commit. Then do git branch branchname SHA

if you want to carry over stash to new branch, do git stash branch branchname

Cheery picking changes
suppose you are working on a branch, and you have made multiple commits on the branch. eg: commit1, commit2, commit3
Now you want to apply just the commit1 from the branch to the master.
You cannot do git merge as it will also apply commit2, commit3 to the master
In this case you can do, git cherry-pick (SHA of )commit1
This way you only apply commit1 from the branch to the master
Now later, if you merge your branch with master, git will know commit1 was already applied by cherry-pick, and will not reapply it. Only commit2 and commit3 will be applied to the merge.